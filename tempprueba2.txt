

int main(){

    int count, temp, i, j, number[30];

    printf("How many numbers are u going to enter?: ");
    scanf("%d",&count);

    printf("Enter %d numbers: ",count);

    for(i=0;i<count;i++)
        scanf("%d",&number[i]);

    
    for(i=count-2;i>=0;i--){
        for(j=0;j<=i;j++){
            if(number[j]>number[j+1]){
                temp=number[j];
                number[j]=number[j+1];
                number[j+1]=temp;
            }
        }
    }

    printf("Sorted elements: ");
    for(i=0;i<count;i++)
        printf(" %d",number[i]);

    return 0;
}

int main2(){

    
    int i, j, count, temp, number[25];

    printf("How many numbers u are going to enter?: ");
    scanf("%d",&count);

    printf("Enter %d elements: ", count);
        for(i=0;i<count;i++)
        scanf("%d",&number[i]);

        for(i=1;i<count;i++){
        temp=number[i];
        j=i-1;
        while((temp<number[j])&&(j>=0)){
            number[j+1]=number[j];
            j=j-1;
        }
        number[j+1]=temp;
    }

    printf("Order of Sorted elements: ");
    for(i=0;i<count;i++)
        printf(" %d",number[i]);

    return 0;
}

int main3(){
    
    int i, j, count, temp, number[25];

    printf("How many numbers u are going to enter?: ");
    scanf("%d",&count);

    printf("Enter %d elements: ", count);
        for(i=0;i<count;i++)
        scanf("%d",&number[i]);

        for(i=0;i<count;i++){
        for(j=i+1;j<count;j++){
            if(number[i]>number[j]){
                temp=number[i];
                number[i]=number[j];
                number[j]=temp;
            }
        }
    }

    printf("Sorted elements: ");
    for(i=0;i<count;i++)
        printf(" %d",number[i]);

    return 0;
}

void quicksort(int number[25],int first,int last){
    int i, j, pivot, temp;

    if(first<last){
        pivot=first;
        i=first;
        j=last;

        while(i<j){
            while(number[i]<=number[pivot]&&i<last)
                i++;
            while(number[j]>number[pivot])
                j--;
            if(i<j){
                temp=number[i];
                number[i]=number[j];
                number[j]=temp;
            }
        }

        temp=number[pivot];
        number[pivot]=number[j];
        number[j]=temp;
        quicksort(number,first,j-1);
        quicksort(number,j+1,last);

    }
}

int main4(){
    int i, count, number[25];

    printf("How many elements are u going to enter?: ");
    scanf("%d",&count);

    printf("Enter %d elements: ", count);
    for(i=0;i<count;i++)
        scanf("%d",&number[i]);

    quicksort(number,0,count-1);

    printf("Order of Sorted elements: ");
    for(i=0;i<count;i++)
        printf(" %d",number[i]);

    return 0;
}

int main5()
{
    int num1, num2, num3;
    int *p1, *p2, *p3;

        printf("Enter First Number: ");
    scanf("%d",&num1);
    printf("Enter Second Number: ");
    scanf("%d",&num2);
    printf("Enter Third Number: ");
    scanf("%d",&num3);

        p1 = &num1;
    p2 = &num2;
    p3 = &num3;
    if(*p1 > *p2)
    {
        if(*p1 > *p3)
        {
            printf("%d is the largest number", *p1);
        }
        else
        {
            printf("%d is the largest number", *p3);
        }
    }
    else
    {
        if(*p2 > *p3)
        {
            printf("%d is the largest number", *p2);
        }
        else
        {
            printf("%d is the largest number", *p3);
        }
    }
    return 0;
}

int main6()
{
    char str[100];
    char *p;
    int  vCount=0,cCount=0;

    printf("Enter any string: ");
    fgets(str, 100, stdin);

        p=str;

        while(*p!='\0')
    {
        if(*p=='A' ||*p=='E' ||*p=='I' ||*p=='O' ||*p=='U'
           ||*p=='a' ||*p=='e' ||*p=='i' ||*p=='o' ||*p=='u')
            vCount++;
        else
            cCount++;
                p++;
    }

    printf("Number of Vowels in String: %d\n",vCount);
    printf("Number of Consonants in String: %d",cCount);
    return 0;
}

int main7()
{
    char str[100];
    char *p;

    printf("Enter any string: ");
    fgets(str, 100, stdin);

    
    p=str;

    printf("The input string is: ");
        while(*p!='\0')
        printf("%c",*p++);

    return 0;
}

void swap(int *x,int *y)
{
    int t;
    t   = *x;
    *x   = *y;
    *y   =  t;
}

int main8()
{
    int num1,num2;

    printf("Enter value of num1: ");
    scanf("%d",&num1);
    printf("Enter value of num2: ");
    scanf("%d",&num2);

        printf("Before Swapping: num1 is: %d, num2 is: %d\n",num1,num2);

        swap(&num1,&num2);

        printf("After  Swapping: num1 is: %d, num2 is: %d\n",num1,num2);

    return 0;
}

int main9(){
    int num1, num2, quot, rem;

    printf("Enter dividend: ");
    scanf("%d", &num1);

    printf("Enter divisor: ");
    scanf("%d", &num2);

    
    quot = num1 / num2;

    
    rem = num1 % num2;

    printf("Quotient is: %d\n", quot);
    printf("Remainder is: %d", rem);

    return 0;
}



int decimalToOctal(int decimalnum)
{
    int octalnum = 0, temp = 1;

    while (decimalnum != 0)
    {
        octalnum = octalnum + (decimalnum % 8) * temp;
        decimalnum = decimalnum / 8;
        temp = temp * 10;
    }

    return octalnum;
}
int main12()
{
    int decimalnum;

    printf("Enter a Decimal Number: ");
    scanf("%d", &decimalnum);

    printf("Equivalent Octal Number: %d", decimalToOctal(decimalnum));

    return 0;
}


int main14(){
    char str[25];
    int i;

    printf("Enter the string:");
    scanf("%s",str);

    for(i=0;i<=strlen(str);i++){
        if(str[i]>=97&&str[i]<=122)
            str[i]=str[i]-32;
    }
    printf("\nUpper Case String is: %s",str);
    return 0;
}


int main16()
{
    int circle_radius;
    float PI_VALUE=3.14, circle_area, circle_circumf;

        printf("\nEnter radius of circle: ");
        scanf("%d",&circle_radius);

        circle_area = PI_VALUE * circle_radius * circle_radius;
    printf("\nArea of circle is: %f",circle_area);

        circle_circumf = 2 * PI_VALUE * circle_radius;
    printf("\nCircumference of circle is: %f",circle_circumf);

    return(0);
}


int main17(){
int triangle_side;
float triangle_area, temp_variable;

printf("\nEnter the Side of the triangle:");
scanf("%d",&triangle_side);

temp_variable = sqrt(3) / 4 ;
triangle_area = temp_variable * triangle_side * triangle_side ;
printf("\nArea of Equilateral Triangle is: %f",triangle_area);
return(0);
}

int main18()
{
    printf("\n\n\t\tStudytonight - Best place to learn\n\n\n");

    int n, exp, exp1;
    long long int value = 1;

    printf("Enter the number and its exponential:\n\n");
    scanf("%d%d",&n, &exp);

    exp1 = exp;   
        while(exp-- > 0)
    {
        value *= n;     }

    printf("\n\n %d^%d = %lld\n\n", n, exp1, value);
    printf("\n\n\n\n\t\t\tCoding is Fun !\n\n\n");
    return 0;
}

int main20()
{
    printf("\n\n\t\tStudytonight - Best place to learn\n\n\n");

    int n, m, c, d, p, q, k, first[10][10], second[10][10], pro[10][10],sum = 0;

    printf("\nEnter the number of rows and columns of the first matrix: \n\n");
    scanf("%d%d", &m, &n);

    printf("\nEnter the %d elements of the first matrix: \n\n", m*n);
    for(c = 0; c < m; c++)           for(d = 0; d < n; d++)               scanf("%d", &first[c][d]);

    printf("\nEnter the number of rows and columns of the first matrix: \n\n");
    scanf("%d%d", &p, &q);

    if(n != p)
        printf("Matrices with the given order cannot be multiplied with each other.\n\n");

    else        {
        printf("\nEnter the %d elements of the second matrix: \n\n",m*n);

        for(c = 0; c < p; c++)               for(d = 0; d < q; d++)                   scanf("%d", &second[c][d]);

                printf("\n\nThe first matrix is: \n\n");
        for(c = 0; c < m; c++)           {
            for(d = 0; d < n; d++)               {
                printf("%d\t", first[c][d]);
            }
            printf("\n");
        }

                printf("\n\nThe second matrix is: \n\n");
        for(c = 0; c < p; c++)           {
            for(d = 0; d < q; d++)               {
                printf("%d\t", second[c][d]);
            }
            printf("\n");
        }

        for(c = 0; c < m; c++)           {
            for(d = 0; d < q; d++)               {
                for(k = 0; k < p; k++)
                {
                    sum = sum + first[c][k]*second[k][d];
                }
                pro[c][d] = sum;                    sum = 0;                }
        }

                printf("\n\nThe multiplication of the two entered matrices is: \n\n");
        for(c = 0; c < m; c++)           {
            for(d = 0; d < q; d++)               {
                printf("%d\t", pro[c][d]);
            }
            printf("\n");         }
    }
    printf("\n\n\t\t\tCoding is Fun !\n\n\n");
    return 0;
}

int main21()
{
    printf("\n\n\t\tStudytonight - Best place to learn\n\n\n");

    int a[2][2], i, j;
    long determinant;

    printf("\n\nEnter the 4 elements of the array\n");
    for(i = 0; i < 2; i++)
        for(j = 0; j < 2; j++)
            scanf("%d", &a[i][j]);

    printf("\n\nThe entered matrix is: \n\n");
    for(i = 0; i < 2; i++)
    {
        for(j = 0; j < 2; j++)
        {
            printf("%d\t", a[i][j]);           }
        printf("\n");     }

        determinant = a[0][0]*a[1][1] - a[1][0]*a[0][1];
    printf("\n\nDterminant of 2x2 matrix is : %d - %d =  %ld", a[0][0]*a[1][1], a[1][0]*a[0][1], determinant);

    printf("\n\n\t\t\tCoding is Fun !\n\n\n");
    return 0;
}